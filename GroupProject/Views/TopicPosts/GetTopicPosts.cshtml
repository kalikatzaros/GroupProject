@model GroupProject.ViewModels.GetTopicPostsViewModel
@{
    ViewBag.Title = "GetTopicPosts";
    Layout = "~/Views/Shared/_KalikatzarosLayout.cshtml";
}


<div class="topics-title">
    <h3 id="topic-id" data-topic-id="@Model.TopicId">@Model.Topic.Title</h3>
    <button class="button-default button-analogus add-post-button">+ Add Post</button>
</div>

<div class="form-container">
    <div class="add-topic-post-form hidden">
        @using (Html.BeginForm("CreateTopicPost", "TopicPosts", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()


            <div class="form-body">
                <label for="Body">Post: </label>
                <textarea id="Body" name="Body" rows="2" required></textarea>
            </div>
            <a class="get-image-button" onclick="document.getElementById('ImageFile').click()"><i class="material-icons">camera</i><span>Photo</span></a>
            <input type='file' name="ImageFile" id="ImageFile" accept="image/png, image/jpeg, image/jpg, image/gif" style="display:none">
            <input type="hidden" name="TopicId" id="TopicId" value=@Model.TopicId />

            <div class="form-buttons">
                <button type="reset" class="button-default">Clear</button>
                <button type="submit" id="submit-button" class="button-default button-analogus">Create</button>
            </div>


        }
    </div>
</div>

@foreach (var item in Model.TopicPosts)
{
    <div class="topic-post" id="topic-post">
        <div class="topic-post-header">

            <div class="topic-post-user">
                <div class="topic-post-left">
                    <div class="profile-photo">
                        <img class="profile-photo" src="~/img/@item.Sender.Thumbnail" />
                    </div>
                    <div class="user-info">
                        <a href=@Url.Action("VisitingProfile", "Profile",new {id=item.Sender.Id })>
                            <h3 class="text-capitalize">

                                @item.Sender.FullName
                                @if (item.Sender.IsAdmin)
                                {
                                    <img src="~/img/crown.svg" id="crown" />
                                }
                            </h3>
                        </a>
                    </div>
                </div>
                <small class="text-muted">@item.Post.Datetime</small>

            </div>

            <div class="photo">
                @if (item.Post.Thumbnail != null)
                {
                    <img src="~/img/@item.Post.Thumbnail" />
                }
            </div>
            @if (ViewBag.LoggedUser.IsAdmin || ViewBag.LoggedUser.Id == item.SenderId)
            {
                <div class="action-buttons">
                    <div class="two-buttons">
                        <a class="material-icons tp-delete" data-tp-id="@item.Id">delete</a>
                        <a class="material-icons tp-edit" data-tp-id="@item.Id">edit</a>
                    </div>
                </div>

            }
            <div class="topic-post-text">
                <p>@item.Post.Body</p>
            </div>



        </div>
    </div>
    <div class="form-container">
        <div class="edit-topic-post-form hidden" id="@item.Id">
            @using (Html.BeginForm("UpdateTopicPost", "TopicPosts", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()


                <div class="form-body">
                    <label for="Body">Post: </label>
                    <textarea id="Body" name="Body" rows="2" required>@item.Post.Body</textarea>
                </div>
                <a class="get-image-button" onclick="document.getElementById('ImageFile').click()"><i class="material-icons">camera</i><span>Photo</span></a>
                <input type="file" name="ImageFile" id="ImageFile" accept="image/png, image/jpeg, image/jpg, image/gif" style="display:none">
                <input type="hidden" name="TopicId" id="TopicId" value=@Model.TopicId />
                <input type="hidden" name="Id" id="Id" value=@item.Id />

                <div class="form-buttons">
                    <button type="reset" class="button-default">Clear</button>
                    <button type="submit" id="update-button" class="button-default button-analogus">Update</button>
                </div>

                
            }
        </div>
    </div>
}

@section Scripts{
    <script>
        $(document).ready(function () {
            const id = $('#topic-id').attr('data-topic-id');
            $('.add-post-button').click(function () {
                $('.add-topic-post-form').toggleClass('hidden');

            });

                    
            $('.tp-edit').click(function () {
                const button = $(this);
                console.log($('#ImageFile').val())
                $(`#${button.attr('data-tp-id')}`).toggleClass('hidden');
            });

            $(".tp-delete").click(function () {
                var button = $(this);
                console.log(button);

                bootbox.confirm("Are you sure to delete this post?", function (result) {

                    if (result) {
                        $.ajax({
                            url: "/api/topicPosts/deletePost/" + button.attr("data-tp-id"),
                            method: "DELETE"
                        }).done(function (response) {
                            console.log(response);
                            button.parent().parent().fadeOut();
                            location.reload();
                        }).fail(function (error) {
                            console.log(error);
                        });
                    }

                });
            });

        });
    </script>

}
<style>
    .form-container {
        width: 100%;
        display: flex;
        justify-content: flex-end;
    }

    .form-buttons {
        display: flex;
        gap: 1rem;
    }

    .form-body, .form-title {
        display: flex;
        align-items: center;
        gap: 1rem;
        width: 100%;
    }

        .form-body #Body {
            margin-left: 0.65rem;
        }

    .add-topic-post-form label, .edit-topic-post-form label {
        font-size: 1rem;
    }

    .add-topic-post-form textarea, .edit-topic-post-form textarea {
        font-size: 1rem;
        width: 70%;
        background-color: var(--color-light);
        border-radius: var(--card-border-radius);
        padding: var(--card-padding);
        resize: none;
    }

    .add-topic-post-form, .edit-topic-post-form {
        background-color: var(--color-white);
        border-radius: var(--card-border-radius);
        display: flex;
        padding: var(--card-padding);
        margin-bottom: 1rem;
        flex-direction: column;
        gap: 1rem;
        justify-content: center;
    }

    .topics-title {
        width: 100%;
        padding: var(--card-padding);
        background-color: var(--color-analogus-secondary);
        border-radius: var(--card-border-radius);
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 1rem;
        color: var(--color-dark);
    }

    .button-default {
        display: inline-block;
        padding: var(--button-padding);
        font-weight: 500;
        border-radius: var(--border-radius);
        cursor: pointer;
        transition: all 300ms ease;
        font-size: 1rem;
    }

        .button-default:hover {
            opacity: 0.5;
            text-decoration: none;
        }

    .button-analogus {
        background-color: var(--color-analogus);
        color: var(--color-white);
    }

    .topics-title {
        width: 100%;
        padding: var(--card-padding);
        background-color: var(--color-analogus-secondary);
        border-radius: var(--card-border-radius);
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 1rem;
        color: var(--color-dark);
    }

   @*topic post*@
    .add-post-image i {
        color: var(--color-gray);
    }

        .add-post-image i:hover {
            color: var(--color-primary);
            transition: all 300ms ease;
            cursor: pointer;
        }

    .get-image-button {
        width:5rem;
        display: flex;
        align-items: center;
        justify-content: flex-end;
        background-color: var(--color-light);
        border-radius: var(--card-border-radius);
        padding: var(--card-padding);
        height: 1.8rem;
        color: var(--color-gray);
    }

        .get-image-button:hover {
            color: var(--color-analogus);
            cursor: pointer;
            text-decoration:none;
        }

        .get-image-button span {
            padding-left: 0.3rem;
        }
    .topic-post {
        background-color: var(--color-white);
        padding: var(--card-padding);
        border-radius: var(--card-border-radius);
        margin: 1rem 0;
        font-size: 1rem;
        line-height: 1.5;
    }

    .topic-post-header {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .topic-post-user {
        display: flex;
        justify-content: space-between;
        @*gap:1rem;
        *@
    }

    .topic-post-left {
        display: flex;
        gap: 1rem;
    }

    .user-info h3 {
        display: flex;
    }

    .photo img {
        margin: 1rem 0;
        border-radius: var(--card-border-radius);
    }

    .action-buttons {
        display: flex;
        justify-content: flex-end;
        border-radius: var(--card-border-radius);
        margin-bottom: 1rem;
        align-items: center;
    }

    .two-buttons {
        background-color: var(--color-light);
        border-radius: var(--card-border-radius);
        padding: 0.1rem 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .action-buttons a {
        color: var(--color-gray);
        border-radius: var(--card-border-radius);
        font-size: 1rem;
        transition: var(--transition);
        cursor: pointer;
    }

    .tp-delete:hover {
        color: var(--color-danger);
        text-decoration: none;
    }

    .tp-edit:hover {
        color: var(--color-primary);
        text-decoration: none;
    }

    .topic-post-text {
        background-color: var(--color-light);
        padding: var(--card-padding);
        border-radius: var(--card-border-radius);
    }

</style>